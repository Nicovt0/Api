name: Deploy Django to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          known_hosts: "just-a-placeholder"

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            # 1. Crear directorio del proyecto
            mkdir -p /home/ec2-user/mybank-api
            cd /home/ec2-user/mybank-api

            # 2. Detener y eliminar contenedores previos
            sudo docker stop mybank_container || true
            sudo docker rm mybank_container || true
            sudo docker rmi mybank_image || true

            # 3. Clonar/actualizar repositorio
            if [ ! -d ".git" ]; then
              git clone https://${{ secrets.GH_TOKEN }}@github.com/Nicovt0/Api.git .
            else
              git pull origin main
            fi

            # 4. Crear archivo .env
            echo 'DB_NAME=$DB_NAME' > .env
            echo 'DB_USER=$DB_USER' >> .env
            echo 'DB_PASSWORD=$DB_PASSWORD' >> .env
            echo 'DB_HOST=$DB_HOST' >> .env
            echo 'DB_PORT=$DB_PORT' >> .env
            echo 'MJ_APIKEY_PUBLIC=$MJ_APIKEY_PUBLIC' >> .env
            echo 'MJ_APIKEY_PRIVATE=$MJ_APIKEY_PRIVATE' >> .env

            # 5. Construir y ejecutar contenedor
            sudo docker build -t mybank_image .
            sudo docker run -d \
              --name mybank_container \
              -p 80:8000 \
              --env-file .env \
              --restart unless-stopped \
              mybank_image
          "
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          MJ_APIKEY_PUBLIC: ${{ secrets.MJ_APIKEY_PUBLIC }}
          MJ_APIKEY_PRIVATE: ${{ secrets.MJ_APIKEY_PRIVATE }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Token de GitHub con permisos repo